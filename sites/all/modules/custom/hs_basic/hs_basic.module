<?php 


/**
*  implementation of hook_form
*/

function hs_basic_form_alter(&$form, &$form_state, $form_id) {
  switch($form_id) {
    case "commerce_checkout_form_checkout":
    $form['customer_profile_shipping']['commerce_customer_address']['#access'] = FALSE;
    global $user;
    $form['customer_profile_shipping']['#title'] = t('Информация о доставке');
    if ($user->uid != 0) {
      $profile = user_load($user->uid);    
  	  $form['customer_profile_shipping']['#title'] = t('Информация о доставке');
  	  $form['cart_contents']['cart_contents_view']['#markup'] = preg_replace('/<td class="component-title">Order total<\/td>/i', '<td class="component-title">Общая сумма заказа</td>', $form['cart_contents']['cart_contents_view']['#markup']);
  	  
      $form['customer_profile_shipping']['field_full_name']['und'][0]['value']['#default_value'] = $profile->field_full_name['und'][0]['value'];
      $form['customer_profile_shipping']['field_address']['und'][0]['value']['#default_value'] = $profile->field_address['und'][0]['value'];
      $form['customer_profile_shipping']['field_city']['und'][0]['value']['#default_value'] = $profile->field_city['und'][0]['value'];
      $form['customer_profile_shipping']['field_telephone']['und'][0]['value']['#default_value'] = $profile->field_telephone['und'][0]['value'];
    }
    break;
	case "commerce_checkout_form_review":
	  $form['checkout_review']['review']['#data']['customer_profile_shipping']['title'] = t('Информация о доставке');
      $form['checkout_review']['review']['#data']['cart_contents']['data'] = preg_replace('/<td class="component-title">Order total<\/td>/i', '<td class="component-title">Общая сумма заказа</td>', $form['checkout_review']['review']['#data']['cart_contents']['data']);
	  break;	
  case "comment_node_news_form":
    $form['comment_body']['und'][0]['#title'] = 'Комментарий';
    $form['subject']['#access'] = FALSE;
    break; 
  }
}

/**
 * implementation of hook_views_pre_build()
 */
/*
function hs_basic_views_pre_build(&$view) {
  dsm($view);
  dsm($view->filter['field_manufacturer_tid']);
  if ($view->name == 'products' && $view->current_display == 'page') {
    //drupal_add_js(drupal_get_path('module', 'dt') . '/js/test-view.js');
    $query = db_select('field_data_field_category', 'fc');
    $query->innerJoin('field_data_field_manufacturer', 'fm', 'fm.entity_id = fc.entity_id');
    
    if (count($view->filter['field_manufacturer_tid']->view->args) > 0) {
      $query->condition('fm.field_manufacturer_tid', $view->filter['field_manufacturer_tid']->view->args[0]);
    }
    
    $query->fields('fm', array('field_manufacturer_tid'));
    $result = $query->execute();
    $manufs = array();
    foreach($result as $row) {
      $manufs[] = $row->field_section_tid;
    }
    $options = array();
    foreach($view->filter['field_manufacturer_tid']->options['group_info']['group_items'] as $k => $v) {
      foreach($v['value'] as $ok => $ov) {
        $options[$ok] = $v;      
      }
    }
    unset($view->filter['field_manufacturer_tid']->options['group_info']['group_items']);
    $view->filter['field_manufacturer_tid']->options['group_info']['group_items'] = $options;
    
    foreach($view->filter['field_manufacturer_tid']->options['group_info']['group_items'] as $filter_item) {
      foreach($filter_item['value'] as $k => $v) {
        if (!(in_array($v, $manufs))) {
          $view->filter['field_manufacturer_tid']->options['group_info']['group_items'][$k]['title'] .= ' (dis)';
        }  
      }
    }
  } 
}
*/
